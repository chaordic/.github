name: Linx Digital TypeScript Publish NPM Publish

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: false

jobs:
  install:
    name: install
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
    
  lint-build-test:
    name: Lint, build and Test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Install NestJS
        run: npm install -g @nestjs/cli
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Test
        run: npm run test:cov --if-present
      - name: Build
        run: npm run build
      - name: Upload dist artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  publish:
    name: Publish Package
    runs-on: ubuntu-22.04
    needs: lint-build-test
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ github.workspace }}/dist
      - name: Define tag version
        run: |
          isLatestVersion=^v?[0-9]+\.[0-9]+\.[0-9]+$
          if [[ $GITHUB_REF_NAME =~ $isLatestVersion ]]; then
            tagType="latest"
          else
            tagType="rc"
          fi
          echo "tagType=$tagType" >> $GITHUB_ENV
          printf "It is a $tagType version\n"
      # - run: npm publish --tag $tagType
      - run: | 
          echo "fazendo deploy" 

        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}